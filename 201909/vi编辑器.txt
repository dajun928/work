
vim编辑器快捷键
2019.04.04 15:31:44
字数 2361
阅读 23

插入命令:
i 在当前位置生前插入
I 在当前行首插入
a 在当前位置后插入
A 在当前行尾插入
o 在当前行之后插入一行
O 在当前行之前插入一行

查找命令:
/text　 查找text，按n健查找下一个，按N健查找前一个。
?text　查找text，反向查找，按n健查找下一个，按N健查找前一个。
vim 中有一些特殊字符在查找时需要转义　　.[]^%/?~$
:set ignorecase　忽略大小写的查找
:set noignorecase　不忽略大小写的查找
查找很长的词，如果一个词很长，键入麻烦，可以将光标移动到该词上，按或#键即可以该单词进行搜索，相当于/搜索。而#命令相当于?搜索。
:set hlsearch　高亮搜索结果，所有结果都高亮显示，而不是只显示一个匹配。
:set nohlsearch　关闭高亮搜索显示
:nohlsearch　关闭当前的高亮显示，如果再次搜索或者按下n或N键，则会再次高亮。
:set incsearch　逐步搜索模式，对当前键入的字符进行搜索而不必等待键入完成。
:set wrapscan　重新搜索，在搜索到文件头或尾时，返回继续搜索，默认开启。

替换命令:
ra 将当前字符替换为a，当期字符即光标所在字符。
s/old/new/ 用old替换new，替换当前行的第一个匹配
s/old/new/g 用old替换new，替换当前行的所有匹配
%s/old/new/ 用old替换new，替换所有行的第一个匹配
%s/old/new/g 用old替换new，替换整个文件的所有匹配
:10,20 s/^/ /g 在第10行知第20行每行前面加四个空格，用于缩进。
ddp 交换光标所在行和其下紧邻的一行。

移动命令:
h 左移一个字符
l 右移一个字符
k 上移一个字符
j 下移一个字符

以上四个命令可以配合数字使用，比如20j就是向下移动20行，5h就是向左移动5个字符，在Vim中，很多命令都可以配合数字使用，比如删除10个字符10x，在当前位置后插入3个！，3a！<Esc>，这里的Esc是必须的，否则命令不生效。

w 向前移动一个单词（光标停在单词首部），如果已到行尾，则转至下一行行首。此命令快，可以代替l命令。

b 向后移动一个单词 2b 向后移动2个单词
e，同w，只不过是光标停在单词尾部
ge，同b，光标停在单词尾部。
^ 移动到本行第一个非空白字符上。
0（数字0）移动到本行第一个字符上，
<HOME> 移动到本行第一个字符。同0健。
移动到行尾 3 移动到下面3行的行尾
gg 移动到文件头。 = [[
G（shift + g） 移动到文件尾。 = ]]
f（find）命令也可以用于移动，fx将找到光标后第一个为x的字符，3fd将找到第三个为d的字符。
F 同f，反向查找。
跳到指定行，冒号+行号，回车，比如跳到240行就是 :240回车。另一个方法是行号+G，比如230G跳到230行。
Ctrl + e 向下滚动一行
Ctrl + y 向上滚动一行
Ctrl + d 向下滚动半屏
Ctrl + u 向上滚动半屏
Ctrl + f 向下滚动一屏
Ctrl + b 向上滚动一屏

撤销和重做:
u 撤销（Undo）
U 撤销对整行的操作
Ctrl + r 重做（Redo），即撤销的撤销。

删除命令:
x 删除当前字符
3x 删除当前光标开始向后三个字符
X 删除当前字符的前一个字符。X=dh
dl 删除当前字符， dl=x
dh 删除前一个字符
dd 删除当前行
dj 删除上一行
dk 删除下一行
10d 删除当前行开始的10行。
D 删除当前字符至行尾。D=dd 删除当前字符之后的所有字符（本行）
kdgg 删除当前行之前所有行（不包括当前行）
jdG（jd shift + g） 删除当前行之后所有行（不包括当前行）
:1,10d 删除1-10行
:11,d 删除11行及以后所有的行 :1,d 删除所有行
J(shift + j)　　删除两行之间的空行，实际上是合并两行。

拷贝和粘贴:
yy 拷贝当前行
nyy 拷贝当前后开始的n行，比如2yy拷贝当前行及其下一行。
p 在当前光标后粘贴,如果之前使用了yy命令来复制一行，那么就在当前行的下一行粘贴。
shift+p 在当前行前粘贴
:1,10 co 20 将1-10行插入到第20行之后。
:1,co 将整个文件复制一份并添加到文件尾部。
正常模式下按v（逐字）或V（逐行）进入可视模式，然后用jklh命令移动即可选择某些行或字符，再按y即可复制
ddp交换当前行和其下一行
xp交换当前字符和其后一个字符

剪切命令:
正常模式下按v（逐字）或V（逐行）进入可视模式，然后用jklh命令移动即可选择某些行或字符，再按d即可剪切
ndd 剪切当前行之后的n行。利用p命令可以对剪切的内容进行粘贴
:1,10d 将1-10行剪切。利用p命令可将剪切后的内容进行粘贴。
:1, 10 m 20 将第1-10行移动到第20行之后。

退出命令:
:wq 保存并退出
ZZ 保存并退出
:q! 强制退出并忽略所有更改
:e! 放弃所有修改，并打开原来文件。

窗口命令:
:split或new 打开一个新窗口，光标停在顶层的窗口上
:split file或:new file 用新窗口打开文件
split打开的窗口都是横向的，使用vsplit可以纵向打开窗口。
Ctrl+ww 移动到下一个窗口
Ctrl+wj 移动到下方的窗口
Ctrl+wk 移动到上方的窗口

关闭窗口:
:close 最后一个窗口不能使用此命令，可以防止意外退出vim。
:q 如果是最后一个被关闭的窗口，那么将退出vim。
ZZ 保存并退出。
关闭所有窗口，只保留当前窗口
:only
录制宏
按q键加任意字母开始录制，再按q键结束录制（这意味着vim中的宏不可嵌套），使用的时候@加宏名，比如qa。。。q录制名为a的宏，@a使用这个宏。

执行shell命令:
:!command
:!ls 列出当前目录下文件
:!perl -c script.pl 检查perl脚本语法，可以不用退出vim，非常方便。
:!perl script.pl 执行perl脚本，可以不用退出vim，非常方便。
:suspend或Ctrl - Z 挂起vim，回到shell，按fg可以返回vim。

注释命令:
perl程序中#开始的行为注释，所以要注释某些行，只需在行首加入#
3,5 s/^/#/g 注释第3-5行
3,5 s/^#//g 解除3-5行的注释
1,$ s/^/#/g 注释整个文档。
:%s/^/#/g 注释整个文档，此法更快。

帮助命令:
:help or F1 显示整个帮助
:help xxx 显示xxx的帮助，比如 :help i, :help CTRL-[（即Ctrl+[的帮助）。
:help 'number' Vim选项的帮助用单引号括起
:help <Esc> 特殊键的帮助用<>扩起
:help -t Vim启动参数的帮助用-
：help i_<Esc> 插入模式下Esc的帮助，某个模式下的帮助用模式_主题的模式
帮助文件中位于||之间的内容是超链接，可以用Ctrl+]进入链接，Ctrl+o（Ctrl + t）返回

其他非编辑命令:
. 重复前一次命令
:set ruler?　查看是否设置了ruler，在.vimrc中，使用set命令设制的选项都可以通过这个命令查看
:scriptnames　查看vim脚本文件的位置，比如.vimrc文件，语法文件及plugin等。
:set list 显示非打印字符，如tab，空格，行尾等。如果tab无法显示，请确定用set lcs=tab:>-命令设置了.vimrc文件，并确保你的文件中的确有tab，如果开启了expendtab，那么tab将被扩展为空格。

:syntax 列出已经定义的语法项
:syntax clear 清除已定义的语法规则
:syntax case match 大小写敏感，int和Int将视为不同的语法元素
:syntax case ignore 大小写无关，int和Int将视为相同的语法元素，并使用同样的配色方案

0人点赞
随笔
  
曹交凌
拥有0.081钻 (约0.01元)

关注
"小礼物走一走，来简书关注我"

赞赏


写下你的评论...
全部评论
0
只看作者
按时间倒序
按时间正序
推荐阅读
更多精彩内容
vim编辑器快捷键
1.确保是否已经安装 vim 编辑 rpm -qa |grep vim 或者 rpm -qf `which vim...

Sirius_KP
VIM快捷键
曾经在思科的工厂测试系统`KlemTest` (`SUSE`命令行模式)中使用`VI`/`VIM`超过2年半，现在...

戈多在地狱
vim 快捷键汇总
关于Vim vim是我最喜欢的编辑器，也是Linux下第二强大的编辑器。 虽然emacs是公认的世界第一，我认为使...

小杺
【Linux】Vim编辑器命令大全
1. 关于Vim vim是我最喜欢的编辑器，也是linux下第二强大的编辑器。 虽然emacs是公认的世界第一，我...

Dyworldhua
vim命令速记 & bash快捷键
转载自http://blog.csdn.net/nicky_zs/article/details/6941648 ...

ben99

曹交凌

关注
拥有0.081钻 (约0.01元)
邮箱配置文件
阅读 19
架构环境部署
阅读 24
精彩继续
9102，穿吊带的女明星还是道歉了
阅读 56452

卖不掉的房子，被套在北京的我们
阅读 34402


写下你的评论...
评论0
赞

首页
下载APP

搜索
vim编辑器快捷键

曹交凌

关注

赞赏支持
vim编辑器快捷键
2019.04.04 15:31:44
字数 2361
阅读 23

插入命令:
i 在当前位置生前插入
I 在当前行首插入
a 在当前位置后插入
A 在当前行尾插入
o 在当前行之后插入一行
O 在当前行之前插入一行

查找命令:
/text　 查找text，按n健查找下一个，按N健查找前一个。
?text　查找text，反向查找，按n健查找下一个，按N健查找前一个。
vim 中有一些特殊字符在查找时需要转义　　.[]^%/?~$
:set ignorecase　忽略大小写的查找
:set noignorecase　不忽略大小写的查找
查找很长的词，如果一个词很长，键入麻烦，可以将光标移动到该词上，按或#键即可以该单词进行搜索，相当于/搜索。而#命令相当于?搜索。
:set hlsearch　高亮搜索结果，所有结果都高亮显示，而不是只显示一个匹配。
:set nohlsearch　关闭高亮搜索显示
:nohlsearch　关闭当前的高亮显示，如果再次搜索或者按下n或N键，则会再次高亮。
:set incsearch　逐步搜索模式，对当前键入的字符进行搜索而不必等待键入完成。
:set wrapscan　重新搜索，在搜索到文件头或尾时，返回继续搜索，默认开启。

替换命令:
ra 将当前字符替换为a，当期字符即光标所在字符。
s/old/new/ 用old替换new，替换当前行的第一个匹配
s/old/new/g 用old替换new，替换当前行的所有匹配
%s/old/new/ 用old替换new，替换所有行的第一个匹配
%s/old/new/g 用old替换new，替换整个文件的所有匹配
:10,20 s/^/ /g 在第10行知第20行每行前面加四个空格，用于缩进。
ddp 交换光标所在行和其下紧邻的一行。

移动命令:
h 左移一个字符
l 右移一个字符
k 上移一个字符
j 下移一个字符

以上四个命令可以配合数字使用，比如20j就是向下移动20行，5h就是向左移动5个字符，在Vim中，很多命令都可以配合数字使用，比如删除10个字符10x，在当前位置后插入3个！，3a！<Esc>，这里的Esc是必须的，否则命令不生效。

w 向前移动一个单词（光标停在单词首部），如果已到行尾，则转至下一行行首。此命令快，可以代替l命令。

b 向后移动一个单词 2b 向后移动2个单词
e，同w，只不过是光标停在单词尾部
ge，同b，光标停在单词尾部。
^ 移动到本行第一个非空白字符上。
0（数字0）移动到本行第一个字符上，
<HOME> 移动到本行第一个字符。同0健。
移动到行尾 3 移动到下面3行的行尾
gg 移动到文件头。 = [[
G（shift + g） 移动到文件尾。 = ]]
f（find）命令也可以用于移动，fx将找到光标后第一个为x的字符，3fd将找到第三个为d的字符。
F 同f，反向查找。
跳到指定行，冒号+行号，回车，比如跳到240行就是 :240回车。另一个方法是行号+G，比如230G跳到230行。
Ctrl + e 向下滚动一行
Ctrl + y 向上滚动一行
Ctrl + d 向下滚动半屏
Ctrl + u 向上滚动半屏
Ctrl + f 向下滚动一屏
Ctrl + b 向上滚动一屏

撤销和重做:
u 撤销（Undo）
U 撤销对整行的操作
Ctrl + r 重做（Redo），即撤销的撤销。

删除命令:
x 删除当前字符
3x 删除当前光标开始向后三个字符
X 删除当前字符的前一个字符。X=dh
dl 删除当前字符， dl=x
dh 删除前一个字符
dd 删除当前行
dj 删除上一行
dk 删除下一行
10d 删除当前行开始的10行。
D 删除当前字符至行尾。D=dd 删除当前字符之后的所有字符（本行）
kdgg 删除当前行之前所有行（不包括当前行）
jdG（jd shift + g） 删除当前行之后所有行（不包括当前行）
:1,10d 删除1-10行
:11,d 删除11行及以后所有的行 :1,d 删除所有行
J(shift + j)　　删除两行之间的空行，实际上是合并两行。

拷贝和粘贴:
yy 拷贝当前行
nyy 拷贝当前后开始的n行，比如2yy拷贝当前行及其下一行。
p 在当前光标后粘贴,如果之前使用了yy命令来复制一行，那么就在当前行的下一行粘贴。
shift+p 在当前行前粘贴
:1,10 co 20 将1-10行插入到第20行之后。
:1,co 将整个文件复制一份并添加到文件尾部。
正常模式下按v（逐字）或V（逐行）进入可视模式，然后用jklh命令移动即可选择某些行或字符，再按y即可复制
ddp交换当前行和其下一行
xp交换当前字符和其后一个字符

剪切命令:
正常模式下按v（逐字）或V（逐行）进入可视模式，然后用jklh命令移动即可选择某些行或字符，再按d即可剪切
ndd 剪切当前行之后的n行。利用p命令可以对剪切的内容进行粘贴
:1,10d 将1-10行剪切。利用p命令可将剪切后的内容进行粘贴。
:1, 10 m 20 将第1-10行移动到第20行之后。

退出命令:
:wq 保存并退出
ZZ 保存并退出
:q! 强制退出并忽略所有更改
:e! 放弃所有修改，并打开原来文件。

窗口命令:
:split或new 打开一个新窗口，光标停在顶层的窗口上
:split file或:new file 用新窗口打开文件
split打开的窗口都是横向的，使用vsplit可以纵向打开窗口。
Ctrl+ww 移动到下一个窗口
Ctrl+wj 移动到下方的窗口
Ctrl+wk 移动到上方的窗口

关闭窗口:
:close 最后一个窗口不能使用此命令，可以防止意外退出vim。
:q 如果是最后一个被关闭的窗口，那么将退出vim。
ZZ 保存并退出。
关闭所有窗口，只保留当前窗口
:only
录制宏
按q键加任意字母开始录制，再按q键结束录制（这意味着vim中的宏不可嵌套），使用的时候@加宏名，比如qa。。。q录制名为a的宏，@a使用这个宏。

执行shell命令:
:!command
:!ls 列出当前目录下文件
:!perl -c script.pl 检查perl脚本语法，可以不用退出vim，非常方便。
:!perl script.pl 执行perl脚本，可以不用退出vim，非常方便。
:suspend或Ctrl - Z 挂起vim，回到shell，按fg可以返回vim。

注释命令:
perl程序中#开始的行为注释，所以要注释某些行，只需在行首加入#
3,5 s/^/#/g 注释第3-5行
3,5 s/^#//g 解除3-5行的注释
1,$ s/^/#/g 注释整个文档。
:%s/^/#/g 注释整个文档，此法更快。

帮助命令:
:help or F1 显示整个帮助
:help xxx 显示xxx的帮助，比如 :help i, :help CTRL-[（即Ctrl+[的帮助）。
:help 'number' Vim选项的帮助用单引号括起
:help <Esc> 特殊键的帮助用<>扩起
:help -t Vim启动参数的帮助用-
：help i_<Esc> 插入模式下Esc的帮助，某个模式下的帮助用模式_主题的模式
帮助文件中位于||之间的内容是超链接，可以用Ctrl+]进入链接，Ctrl+o（Ctrl + t）返回

其他非编辑命令:
. 重复前一次命令
:set ruler?　查看是否设置了ruler，在.vimrc中，使用set命令设制的选项都可以通过这个命令查看
:scriptnames　查看vim脚本文件的位置，比如.vimrc文件，语法文件及plugin等。
:set list 显示非打印字符，如tab，空格，行尾等。如果tab无法显示，请确定用set lcs=tab:>-命令设置了.vimrc文件，并确保你的文件中的确有tab，如果开启了expendtab，那么tab将被扩展为空格。

:syntax 列出已经定义的语法项
:syntax clear 清除已定义的语法规则
:syntax case match 大小写敏感，int和Int将视为不同的语法元素
:syntax case ignore 大小写无关，int和Int将视为相同的语法元素，并使用同样的配色方案

0人点赞
随笔
  
曹交凌
拥有0.081钻 (约0.01元)

关注
"小礼物走一走，来简书关注我"

赞赏


写下你的评论...
全部评论
0
只看作者
按时间倒序
按时间正序
推荐阅读
更多精彩内容
vim编辑器快捷键
1.确保是否已经安装 vim 编辑 rpm -qa |grep vim 或者 rpm -qf `which vim...

Sirius_KP
VIM快捷键
曾经在思科的工厂测试系统`KlemTest` (`SUSE`命令行模式)中使用`VI`/`VIM`超过2年半，现在...

戈多在地狱
vim 快捷键汇总
关于Vim vim是我最喜欢的编辑器，也是Linux下第二强大的编辑器。 虽然emacs是公认的世界第一，我认为使...

小杺
【Linux】Vim编辑器命令大全
1. 关于Vim vim是我最喜欢的编辑器，也是linux下第二强大的编辑器。 虽然emacs是公认的世界第一，我...

Dyworldhua
vim命令速记 & bash快捷键
转载自http://blog.csdn.net/nicky_zs/article/details/6941648 ...

ben99

曹交凌

关注
拥有0.081钻 (约0.01元)
邮箱配置文件
阅读 19
架构环境部署
阅读 24
精彩继续
9102，穿吊带的女明星还是道歉了
阅读 56452

卖不掉的房子，被套在北京的我们
阅读 34402


写下你的评论...
评论0
赞



vi编辑器常用快捷键

x 删除光标处的字符
dd 删除整行
i 在光标前插入文本
a 在光标后插入文本
o 当前行下插入新行
u 撤销最后一次修改

:e! 放弃所有修改，从上次保存开始处再编辑
:wq 保存退出
:q! 不保存退出

/pattern：从光标开始处向文件尾搜索pattern
?pattern：从光标开始处向文件首搜索pattern

 

光标控制命令
命令    光标移动
h或^h    向左移一个字符
j或^j或^n   向下移一行
k或^p    向上移一行
l或空格    向右移一个字符
G    移到文件的最后一行
nG    移到文件的第n行
w    移到下一个字的开头
W    移到下一个字的开头，忽略标点符号
b    移到前一个字的开头
B    移到前一个字的开头，忽略标点符号
L    移到屏幕的最后一行
M    移到屏幕的中间一行
H    移到屏幕的第一行
e    移到下一个字的结尾
E    移到下一个字的结尾，忽略标点符号
(    移到句子的开头
)    移到句子的结尾
{    移到段落的开头
}    移到下一个段落的开头
0或|    移到当前行的第一列
n|    移到当前行的第n列
^    移到当前行的第一个非空字符
$    移到当前行的最后一个字符
+或return   移到下一行的第一个字符
-    移到前一行的第一个非空字符
 

在vi中添加文本
命令    插入动作
a    在光标后插入文本
A    在当前行插入文本
i    在光标前插入文本
I    在当前行前插入文本
o    在当前行的下边插入新行
O    在当前行的上边插入新行
:r file    读入文件file内容，并插在当前行后
:nr file   读入文件file内容，并插在第n行后
escape    回到命令模式
^v char    插入时忽略char的指定意义，这是为了插入特殊字符
 
 
在vi中删除文本
命令    删除操作
x    删除光标处的字符，可以在x前加上需要删除的字符数目
nx    从当前光标处往后删除n个字符
X    删除光标前的字符，可以在X前加上需要删除的字符数目
nX    从当前光标处往前删除n个字符
dw    删至下一个字的开头
ndw    从当前光标处往后删除n个字
dG    删除行，直到文件结束
dd    删除整行
ndd    从当前行开始往后删除
db    删除光标前面的字
ndb    从当前行开始往前删除n字
:n,md    从第m行开始往前删除n行
d或d$    从光标处删除到行尾
dcursor_command   删除至光标命令处，如dG将从当产胆行删除至文件的末尾
^h或backspace   插入时，删除前面的字符
^w    插入时，删除前面的字
 
修改vi文本
每个命令前面的数字表示该命令重复的次数
命令    替换操作
rchar    用char替换当前字符
R text escape   用text替换当前字符直到换下Esc键
stext escape   用text代替当前字符
S或cctext escape 用text代替整行
cwtext escape   将当前字改为text
Ctext escape   将当前行余下的改为text
cG escape   修改至文件的末尾
ccursor_cmd text escape 从当前位置处到光标命令位置处都改为text
 
在vi中查找与替换
命令    查找与替换操作
/text    在文件中向前查找text
?text    在文件中向后查找text
n    在同一方向重复查找
N    在相反方向重复查找
ftext    在当前行向前查找text
Ftext    在当前行向后查找text
ttext    在当前行向前查找text，并将光标定位在text的第一个字符
Ttext    在当前行向后查找text，并将光标定位在text的第一个字符
:set ic    查找时忽略大小写
:set noic   查找时对大小写敏感
:s/oldtext/newtext 用newtext替换oldtext
:m,ns/oldtext/newtext 在m行通过n，用newtext替换oldtext
&    重复最后的:s命令
:g/text1/s/text2/text3 查找包含text1的行，用text3替换text2
:g/text/command   在所有包含text的行运行command所表示的命令
:v/text/command   在所有不包含text的行运行command所表示的命令
 
 
在vi中复制文本
命令    复制操作
yy    将当前行的内容放入临时缓冲区
nyy    将n行的内容放入临时缓冲区
p    将临时缓冲区中的文本放入光标后
P    将临时缓冲区中的文本放入光标前
"(a-z)nyy   复制n行放入名字为圆括号内的可命名缓冲区，省略n表示当前行
"(a-z)ndd   删除n行放入名字为圆括号内的可命名缓冲区，省略n表示当前行
"(a-z)p    将名字为圆括号的可命名缓冲区的内容放入当前行后
"(a-z)P    将名字为圆括号的可命名缓冲区的内容放入当前行前
 
在vi中撤消与重复
命令    撤消操作
u    撤消最后一次修改
U    撤消当前行的所有修改
.    重复最后一次修改
,    以相反的方向重复前面的f、F、t或T查找命令
;    重复前面的f、F、t或T查找命令
"np    取回最后第n次的删除(缓冲区中存有一定次数的删除内容，一般为9)
n    重复前面的/或?查找命令
N    以相反方向重复前面的/或?命令
 
保存文本和退出vi
命令    保存和/或退出操作
:w    保存文件但不退出vi
:w file    将修改保存在file中但不退出vi
:wq或ZZ或:x   保存文件并退出vi
:q!    不保存文件，退出vi
:e!    放弃所有修改，从上次保存文件开始再编辑
 
vi中的选项
选项    作用
:set all   打印所有选项
:set nooption   关闭option选项
:set nu    每行前打印行号
:set showmode   显示是输入模式还是替换模式
:set noic   查找时忽略大小写
:set list   显示制表符(^I)和行尾符号
:set ts=8   为文本输入设置tab stops
:set window=n   设置文本窗口显示n行
 
vi的状态
选项    作用
:.=    打印当前行的行号
:=    打印文件中的行数
^g    显示文件名、当前的行号、文件的总行数和文件位置的百分比
:l    使用字母"l"来显示许多的特殊字符，如制表符和换行符
 
在vi中连接行
选项    作用
J    将下一行连接到当前行的末尾
nJ    连接后面n行
 
在vi中缩进文本
选项    作用
^i(ctrl+i)或tab   插入文本时，插入移动的宽度，移动宽度是事先定义好的
:set ai    打开自动缩进
:set sw=n   将移动宽度设置为n个字符
n<<    使n行都向左移动一个宽度
n>>    使n行都向右移动一个宽度，例如3>>就将接下来的三行每行都向右移动一个移动宽度